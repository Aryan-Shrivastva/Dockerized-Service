name: CI - Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run application tests
        run: npm run test:ci
        env:
          APP_USERNAME: admin
          APP_PASSWORD: secretpassword123
          SECRET_MESSAGE: "This is a test secret message! You have successfully authenticated."
          PORT: 3005
          NODE_ENV: test

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  notify:
    name: Notify Build Status
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always()
    
    steps:
      - name: Build Success
        if: needs.build.result == 'success' || (needs.test.result == 'success' && github.event_name == 'pull_request')
        run: |
          echo "Build completed successfully!"
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "Docker image built and pushed to registry"
          fi
      
      - name: Build Failed
        if: needs.test.result == 'failure' || needs.build.result == 'failure'
        run: |
          echo "Build failed!"
          exit 1